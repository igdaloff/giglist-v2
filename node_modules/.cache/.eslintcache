[{"/Users/nathan/Sites/giglist-v2/src/index.js":"1","/Users/nathan/Sites/giglist-v2/src/App.js":"2","/Users/nathan/Sites/giglist-v2/src/Components/Header.js":"3","/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js":"4","/Users/nathan/Sites/giglist-v2/src/Components/SpotifyEmbed.js":"5","/Users/nathan/Sites/giglist-v2/src/Components/Footer.js":"6"},{"size":219,"mtime":1649278295510,"results":"7","hashOfConfig":"8"},{"size":5797,"mtime":1650340276118,"results":"9","hashOfConfig":"8"},{"size":161,"mtime":1649294125333,"results":"10","hashOfConfig":"8"},{"size":740,"mtime":1649355514709,"results":"11","hashOfConfig":"8"},{"size":2580,"mtime":1650340598973,"results":"12","hashOfConfig":"8"},{"size":502,"mtime":1650340741871,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"ef91n1",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/nathan/Sites/giglist-v2/src/index.js",[],[],["38","39"],"/Users/nathan/Sites/giglist-v2/src/App.js",["40","41"],[],"import React, { useState, useEffect } from 'react';\nimport { CitySelect } from './Components/CitySelect';\nimport { SpotifyEmbed } from './Components/SpotifyEmbed';\nimport { Footer } from './Components/Footer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faRandom, faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faRandom, faAngleDown);\n\nconst cityOptions = {\n  \"austin\": {\n    label: \"Austin, TX\",\n    value: \"austin\",    \n    id: 9179\n  },\n  \"boston\": {\n    label: \"Boston, MA\",\n    value:\"boston\",\n    id: 18842\n  },\n  \"charlotte\": {\n    label: \"Charlotte, NC\",\n    value: \"charlotte\",    \n    id: 13579\n  },\n  \"chicago\": {\n    label: \"Chicago, IL\",\n    value: \"chicago\",   \n    id: 9426\n  },\n  \"columbus\": {\n    label: \"Columbus, OH\",\n    value: \"columbus\",   \n    id: 9480\n  },\n  \"dallas\": {\n    label: \"Dallas, TX\",\n    value: \"dallas\",    \n    id: 35129\n  },\n  \"denver\": {\n    label: \"Denver, CO\",\n    value: \"denver\",    \n    id: 6404\n  },\n  \"detroit\": {\n    label: \"Detroit, MI\",\n    value: \"detroit\",    \n    id: 18073\n  },\n  \"houston\": {\n    label: \"Houston, TX\",\n    value: \"houston\",   \n    id: 15073\n  },\n  \"indianapolis\": {\n    label: \"Indianapolis, IN\",\n    value: \"indianapolis\",    \n    id: 25521\n  },\n  \"jacksonville\": {\n    label: \"Jacksonville, FL\",\n    value: \"jacksonville\",    \n    id: 24578\n  },\n  \"las-vegas\": {\n    label: \"Las Vegas, NV\",\n    value: \"las-vegas\",    \n    id: 8396\n  },\n  \"los-angeles\": {\n    label: \"Los Angeles, CA\",\n    value: \"los-angeles\",    \n    id: 17835\n  },\n  \"nashville\": {\n    label: \"Nashville, TN\",\n    value: \"nashville\",    \n    id: 11104\n  },\n  \"new-york\": {\n    label: \"New York, NY\",\n    value: \"new-york\",   \n    id: 7644\n  },\n  \"philadelphia\": {\n    label: \"Philadelphia, PA\",\n    value: \"philadelphia\",    \n    id: 5202\n  },\n  \"phoenix\": {\n    label: \"Phoenix, AZ\",\n    value: \"phoenix\",    \n    id: 23068\n  },\n  \"portland\": {\n    label: \"Portland, OR\",\n    value: \"portland\",    \n    id: 12283\n  },\n  \"san-antonio\": {\n    label: \"San Antonio, TX\",\n    value: \"san-antonio\",    \n    id: 7554\n  },\n  \"san-diego\": {\n    label: \"San Diego, CA\",\n    value: \"san-diego\",    \n    id: 11086\n  },\n  \"san-francisco\": {\n    label: \"San Francisco, CA\",\n    value: \"san-francisco\",    \n    id: 26330\n  },\n  \"seattle\": {\n    label: \"Seattle, WA\",\n    value: \"seattle\",    \n    id: 2846\n  },\n  \"washington-dc\": {\n    label: \"Washington D.C.\",\n    value: \"washington-dc\",    \n    id: 1409\n  }\n};\n\n\n//Generate the Songkick API url (MOVE THIS INTO CUSTOM HOOK AND SEPARATE FILE EVENTUALLY)\nfunction getSongkickUrl(songkickCityId){   \n  const songkickAPIKey = process.env.REACT_APP_SONGKICK_API_KEY;\n  let songkickUrl = \"https://api.songkick.com/api/3.0/metro_areas/\" + songkickCityId + \"/calendar.json?apikey=\" + songkickAPIKey;\n  return songkickUrl;\n};\n\nfunction App() {\n\n  const [ city, setCity ] = useState('new-york');\n  let cityData = cityOptions[city];\n  const songkickId = cityData.id;\n\n  //Fetch list of gigs in selected city from Songkick API\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [artist, setArtist] = useState('');\n\n  useEffect(() => {\n    const cachedResultJson = localStorage.getItem(`cache-${songkickId}`);    \n\n    // If cached Songkick data exists, retrieve from there\n    if(cachedResultJson) {\n      setIsLoaded(true);\n      const cachedResult = JSON.parse(cachedResultJson);\n      setItems(cachedResult.resultsPage.results.event);\n\n    // If no cached Songkick data, fetch from API and send to localstorage\n    } else {\n      let songkickUrl = getSongkickUrl(songkickId);\n      fetch(songkickUrl)\n        .then(res => res.json())\n        .then(\n          (response) => {\n            setIsLoaded(true);\n            setItems(response.resultsPage.results.event);\n            localStorage.setItem(`cache-${songkickId}`, JSON.stringify(response));\n          },\n          (error) => {\n            setIsLoaded(true);\n            setError(error);\n          }\n        )\n    }\n  }, [songkickId]);\n\n  if(!isLoaded || !items.length){\n    return <h1>Loading...</h1>\n  }\n\n  const randomGig = items[Math.floor(Math.random()*items.length)];\n  const randomGigVenue = randomGig.venue.displayName;\n  const randomGigUrl = randomGig.uri;  \n  const randomGigDate = randomGig.start.date;\n  const randomGigArtist = randomGig.performance[0].artist.displayName;  \n  const randomGigArtistId = randomGig.performance[0].artist.id;\n\n  return (    \n    <>\n      <main className=\"max-w-xl m-auto px-8\"> \n\n        <div className=\"m-auto text-center mt-32 mb-16\">\n          <div className=\"inline-block m-auto\">\n            <h1 className=\"text-2xl\">Discover live music in</h1>\n            <CitySelect\n              city={city}\n              setCity={setCity}\n              cityOptions={cityOptions}          \n            />\n          </div>\n        </div>\n        \n        <div className=\"results p-6 text-xl\">                 \n          <p>\n            <a className=\"hover:underline inline-block decoration-1\" href={randomGigUrl}><strong>{randomGigArtist}</strong> is playing at\n              <br /><strong>{randomGigVenue}</strong> on<br />\n              {randomGigDate} â†’\n            </a>\n          </p>\n          <SpotifyEmbed artist={randomGigArtist} songkickArtistId={randomGigArtistId}/>\n        </div>     \n        <div className=\"block text-center p-4\">          \n          <button className=\"hover:underline\" onClick={() => setArtist({randomGigArtist})}>\n            <FontAwesomeIcon icon=\"random\" className=\"pr-2\"/>Get Another\n          </button>\n        </div>\n\n      </main>\n      <Footer />  \n    </>  \n  );\n}\n\nexport default App;",["42","43"],"/Users/nathan/Sites/giglist-v2/src/Components/Header.js",[],[],"/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js",["44","45","46","47","48","49"],[],"import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport function CitySelect(props) { \n\tconst {\n\t\tcity,\n\t\tsetCity,\n\t\tcityOptions\n\t} = props;\n\t\n  const cityData = props.cityOptions[props.city];\n\n\treturn (\n\t\t<div className=\"city-select relative inline-block\">\n\t\t\t<select className=\"bg-gray-500 hover:bg-gray-600 text-xl p-2 mt-2 font-light rounded-sm border-gray-500 hover:border-gray-600 cursor-pointer\" value={city} onChange={ (event) => props.setCity(event.target.value) }>\n\t\t\t\t{Object.values(props.cityOptions).map((option) => (\n\t\t\t\t\t<option key={option.value} value={option.value}>{option.label}</option>\n\t\t\t  ))}\n\t\t\t</select>\t\t\n\t\t</div>\t\t\t\n\t);\t\n}","/Users/nathan/Sites/giglist-v2/src/Components/SpotifyEmbed.js",["50","51","52","53","54"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport function SpotifyEmbed(props) {\n\n\tconst [token, setToken] = useState('');\n\tconst [src, setSrc] = useState('');\t\t\n\tconst [isLoaded, setIsLoaded] = useState(false);\n\tconst [items, setItems] = useState([]);\n\tconst [spotifyArtistId, setSpotifyArtistId] = useState('');\n\n\tuseEffect(() => {\n\n\t  // API call for retrieving Spotify token\n\t  axios('https://accounts.spotify.com/api/token', {\n\t    headers: {\n\t      'Content-Type' : 'application/x-www-form-urlencoded',\n\t      'Authorization' : 'Basic ' + btoa(process.env.REACT_APP_SPOTIFY_API_KEY)\n\t    },\n\t    data: 'grant_type=client_credentials',\n\t    method: 'POST'\n\t  })\n\t  .then(tokenResponse => {\n\t    setToken(tokenResponse.data.access_token);\n\n\t    // If cached Spotify data exists, retrieve from there\t    \t\t\t\n\t\t\tconst cachedResultJson = localStorage.getItem(`cache-${spotifyArtistId}`);\n\t    if(cachedResultJson){\t    \t\n\t    \tsetIsLoaded(true);\n\t    \t\n\t    \tconst cachedResult = JSON.parse(cachedResultJson);\n\t    \tsetItems(cachedResult);\t\t\t\n\n\t\t\t\tlet spotifyArtistId = cachedResult.data.artists.items[0].id;\t      \n\t\t\t\tlet src = `https://open.spotify.com/embed/artist/${spotifyArtistId}`;\n\n\t\t\t\tsetSrc(src);\t\t\t\t\n\t    } else {\n\t\t\t\t//Artist query to get artist's Spotify ID\n\t\t\t\taxios(`https://api.spotify.com/v1/search?q=${props.artist}&type=artist&limit=1`,\n\t\t\t\t\t{\n\t\t\t\t  'method': 'GET',\n\t\t\t\t  'headers': {\n\t\t\t\t    'Content-Type': 'application/json',\n\t\t\t\t    'Accept': 'application/json',\n\t\t\t\t    'Authorization': 'Bearer ' + tokenResponse.data.access_token\n\t\t\t\t  }\n\t\t\t\t})\n\n\t\t\t\t//Populate artist URL for embed using API response from above\n\t\t\t\t.then(artistresponse=> { \n\t\t\t\t\t\n\t\t\t\t\tif(artistresponse.data.artists.items.length > 0){\n\t\t\t\t\t\tsetIsLoaded(true);\n\n\t\t\t\t\t\tlet spotifyArtistId = artistresponse.data.artists.items[0].id;\n\t\t\t\t\t\tlet src = `https://open.spotify.com/embed/artist/${spotifyArtistId}`\t      \t      \t\t\t\t  \n\t\t\n\t\t\t\t\t\tsetSrc(src);\t  \n\t\t\t\t\t\tsetItems(artistresponse);\n\t\t\t\t\t\tlocalStorage.setItem(`cache-${spotifyArtistId}`, JSON.stringify(artistresponse));\t\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\t}).catch(error=> console.log(error))\n\t    }\t    \n\t  }).catch(error => console.log(error));\n\t},[props.artist]);\n\n\tif ( src ) {\t\t\t\n\t\treturn <iframe className=\"mt-6 w-full\" artist={props.artist} src={src} title={\"Spotify player for \" + props.artist} width=\"100%\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n\t} else {\t\t\t\t\n\t\treturn <em className=\"text-gray-600 text-sm pt-4 block\">[Artist not found on Spotify]</em>\t\n\t}\n};","/Users/nathan/Sites/giglist-v2/src/Components/Footer.js",["55"],[],"import React from 'react';\n\nexport function Footer(){\n\treturn(\n\t\t<footer className=\"absolute max-w-xl left-0 right-0 bottom-0 m-auto p-8 text-s text-gray-400\">\n\t\t\t<p className=\"\">Giglist makes it easy to discover live shows by showing a random nearby concert happening soon, and a song to help you decide if youâ€™re into it.</p>\n\t\t\t<p className=\"mt-8\">Made for you by <a className=\"underline\" href=\"igdaloff.com\">Nathan Igdaloff</a> | <a className=\"underline\" href=\"\">About</a></p>\t\t\t\n\t\t</footer>\n\t)\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":144,"column":10,"nodeType":"62","messageId":"63","endLine":144,"endColumn":15},{"ruleId":"60","severity":1,"message":"64","line":147,"column":10,"nodeType":"62","messageId":"63","endLine":147,"endColumn":16},{"ruleId":"56","replacedBy":"65"},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","severity":1,"message":"67","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"68","line":2,"column":8,"nodeType":"62","messageId":"63","endLine":2,"endColumn":16},{"ruleId":"60","severity":1,"message":"69","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":25},{"ruleId":"60","severity":1,"message":"70","line":8,"column":3,"nodeType":"62","messageId":"63","endLine":8,"endColumn":10},{"ruleId":"60","severity":1,"message":"71","line":9,"column":3,"nodeType":"62","messageId":"63","endLine":9,"endColumn":14},{"ruleId":"60","severity":1,"message":"72","line":12,"column":9,"nodeType":"62","messageId":"63","endLine":12,"endColumn":17},{"ruleId":"60","severity":1,"message":"73","line":6,"column":9,"nodeType":"62","messageId":"63","endLine":6,"endColumn":14},{"ruleId":"60","severity":1,"message":"74","line":8,"column":9,"nodeType":"62","messageId":"63","endLine":8,"endColumn":17},{"ruleId":"60","severity":1,"message":"75","line":9,"column":9,"nodeType":"62","messageId":"63","endLine":9,"endColumn":14},{"ruleId":"60","severity":1,"message":"76","line":10,"column":26,"nodeType":"62","messageId":"63","endLine":10,"endColumn":44},{"ruleId":"77","severity":1,"message":"78","line":67,"column":4,"nodeType":"79","endLine":67,"endColumn":18,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":7,"column":107,"nodeType":"83","endLine":7,"endColumn":140},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'artist' is assigned a value but never used.",["84"],["85"],"'useState' is defined but never used.","'ReactDOM' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'setCity' is assigned a value but never used.","'cityOptions' is assigned a value but never used.","'cityData' is assigned a value but never used.","'token' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'items' is assigned a value but never used.","'setSpotifyArtistId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotifyArtistId'. Either include it or remove the dependency array.","ArrayExpression",["86"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [props.artist, spotifyArtistId]",{"range":"89","text":"90"},[2214,2228],"[props.artist, spotifyArtistId]"]