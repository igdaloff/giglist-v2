{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityOptions = {\n  \"new-york\": {\n    label: \"New York\",\n    value: \"new-york\"\n  },\n  \"los-angeles\": {\n    label: \"Los Angeles\",\n    value: \"los-angeles\"\n  },\n  \"columbus\": {\n    label: \"Columbus\",\n    value: \"columbus\"\n  }\n}; // export class CitySelect2 extends React.Component {\n//   //Initialize local state (default city value) and assign it to this.state\n//   constructor(props) {\n//     super(props); \n//     this.state = {\n//     \tcity: \"New York\",\n//     \tstateabbr: \"NY\"\n//     };\n//     this.handleSelectChange = this.handleSelectChange.bind(this);\n//   }\n//   handleSelectChange(e) {\n//     this.setState({ \n//     \tcity: e.target.value, \n//     \tstateabbr: e.target.dataset.stateabbr \n//     });\n//   }\n//   render() {\n// \t\treturn (\n// \t\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n// \t\t\t\t<select value={this.state.city} onChange={this.handleSelectChange} className=\"m-auto\">\n// \t\t\t\t\t{cityOption.map((option) => (\n// \t\t\t\t\t\t<option key={option.value} value={option.label} data-stateabbr={option.stateabbr}>{option.label}</option>\n// \t\t\t\t  ))}\n// \t\t\t\t</select>\t\n// \t\t\t\t<p>City: {this.state.city}</p>\t\t\t\t\n// \t\t\t\t<p>State: {this.state.stateabbr}</p>\t\t\t\t\n// \t\t\t</div>\t\t\t\n// \t\t);\n// \t}\n// }\n\nexport function CitySelect() {\n  _s();\n\n  const [city, setCity] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center content-center h-full p-0 m-0\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"m-auto\",\n      children: Object.values(cityOptions).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.label,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CitySelect, \"suaywV2685V3ps3QnvEHDTjzC9U=\");\n\n_c = CitySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CitySelect\");","map":{"version":3,"sources":["/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js"],"names":["React","useState","ReactDOM","cityOptions","label","value","CitySelect","city","setCity","Object","values","map","option"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,WAAW,GAAG;AAClB,cAAY;AACVC,IAAAA,KAAK,EAAE,UADG;AAEVC,IAAAA,KAAK,EAAE;AAFG,GADM;AAKlB,iBAAe;AACbD,IAAAA,KAAK,EAAE,aADM;AAEbC,IAAAA,KAAK,EAAE;AAFM,GALG;AASlB,cAAY;AACVD,IAAAA,KAAK,EAAE,UADG;AAEVC,IAAAA,KAAK,EAAE;AAFG;AATM,CAApB,C,CAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,OAAO,SAASC,UAAT,GAAqB;AAAA;;AAE3B,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA,2BAEC;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,gBACEQ,MAAM,CAACC,MAAP,CAAcP,WAAd,EAA2BQ,GAA3B,CAAgCC,MAAD,iBAC/B;AAA2B,QAAA,KAAK,EAAEA,MAAM,CAACR,KAAzC;AAAA,kBAAiDQ,MAAM,CAACR;AAAxD,SAAaQ,MAAM,CAACP,KAApB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAfeC,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst cityOptions = {\n  \"new-york\": {\n    label: \"New York\",\n    value: \"new-york\",    \n  },\n  \"los-angeles\": {\n    label: \"Los Angeles\",\n    value: \"los-angeles\",    \n  },\n  \"columbus\": {\n    label: \"Columbus\",\n    value: \"columbus\",   \n  }\n};\n\n// export class CitySelect2 extends React.Component {\n  \n//   //Initialize local state (default city value) and assign it to this.state\n//   constructor(props) {\n//     super(props); \n//     this.state = {\n//     \tcity: \"New York\",\n//     \tstateabbr: \"NY\"\n//     };\n\n//     this.handleSelectChange = this.handleSelectChange.bind(this);\n//   }\n\n//   handleSelectChange(e) {\n//     this.setState({ \n//     \tcity: e.target.value, \n//     \tstateabbr: e.target.dataset.stateabbr \n//     });\n//   }\n\n//   render() {\n// \t\treturn (\n// \t\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n\n// \t\t\t\t<select value={this.state.city} onChange={this.handleSelectChange} className=\"m-auto\">\n// \t\t\t\t\t{cityOption.map((option) => (\n// \t\t\t\t\t\t<option key={option.value} value={option.label} data-stateabbr={option.stateabbr}>{option.label}</option>\n// \t\t\t\t  ))}\n// \t\t\t\t</select>\t\n\n// \t\t\t\t<p>City: {this.state.city}</p>\t\t\t\t\n// \t\t\t\t<p>State: {this.state.stateabbr}</p>\t\t\t\t\n\n// \t\t\t</div>\t\t\t\n// \t\t);\n// \t}\n// }\n\nexport function CitySelect(){  \n\t\n\tconst [ city, setCity ] = useState('');\n\n\treturn (\n\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n\n\t\t\t<select className=\"m-auto\">\n\t\t\t\t{Object.values(cityOptions).map((option) => (\n\t\t\t\t\t<option key={option.value} value={option.label}>{option.label}</option>\n\t\t\t  ))}\n\t\t\t</select>\t\t\t\t\n\n\t\t</div>\t\t\t\n\t);\t\n}"]},"metadata":{},"sourceType":"module"}