{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Sites/giglist-v2/src/Components/MainContent.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MainContent() {\n  // Get user's lat / long when they click the button\n  function findGeo() {\n    const status = document.querySelector('#status');\n    let spotifySrc;\n\n    function success(position) {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      status.textContent = latitude + ', ' + longitude;\n      document.getElementById('spotify-embed').setAttribute('src', spotifySrc);\n    }\n\n    function error() {\n      status.textContent = 'Unable to retrieve your location';\n    }\n\n    if (!navigator.geolocation) {\n      status.textContent = 'Geolocation is not supported by your browser';\n    } else {\n      status.textContent = 'Locating…';\n      navigator.geolocation.getCurrentPosition(success, error); //Show appropriate spotify embed. Make this dynamic eventually.\n      //Does this belong here or somewhere else?\n\n      spotifySrc = 'https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center content-center h-full p-0 m-0\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"m-auto\",\n      onClick: findGeo,\n      children: \"Get my location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      id: \"spotify-embed\",\n      src: \"\",\n      title: \"spotify-embed\",\n      width: \"300\",\n      height: \"80\",\n      frameBorder: \"0\",\n      allowtransparency: \"true\",\n      allow: \"encrypted-media\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 4\n  }, this); // Convert lat / long into nearest metro area\n\n  function getNearestMetro() {\n    console.log(latitude, longitude);\n  }\n}\n\n_c = MainContent;\nexport default MainContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"sources":["/Users/nathan/Sites/giglist-v2/src/Components/MainContent.js"],"names":["React","MainContent","findGeo","status","document","querySelector","spotifySrc","success","position","latitude","coords","longitude","textContent","getElementById","setAttribute","error","navigator","geolocation","getCurrentPosition","getNearestMetro","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEC,SAASC,WAAT,GAAsB;AAErB;AACA,WAASC,OAAT,GAAmB;AAElB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAf;AACA,QAAIC,UAAJ;;AAEA,aAASC,OAAT,CAAiBC,QAAjB,EAA2B;AACxB,YAAMC,QAAQ,GAAID,QAAQ,CAACE,MAAT,CAAgBD,QAAlC;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AACAR,MAAAA,MAAM,CAACS,WAAP,GAAqBH,QAAQ,GAAG,IAAX,GAAkBE,SAAvC;AACAP,MAAAA,QAAQ,CAACS,cAAT,CAAwB,eAAxB,EAAyCC,YAAzC,CAAsD,KAAtD,EAA6DR,UAA7D;AACA;;AAED,aAASS,KAAT,GAAiB;AAChBZ,MAAAA,MAAM,CAACS,WAAP,GAAqB,kCAArB;AACD;;AAED,QAAG,CAACI,SAAS,CAACC,WAAd,EAA2B;AACzBd,MAAAA,MAAM,CAACS,WAAP,GAAqB,8CAArB;AACD,KAFD,MAEO;AACLT,MAAAA,MAAM,CAACS,WAAP,GAAqB,WAArB;AACAI,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCX,OAAzC,EAAkDQ,KAAlD,EAFK,CAIL;AACA;;AACAT,MAAAA,UAAU,GAAG,6DAAb;AACD;AACF;;AAED,sBACC;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA,4BACC;AACC,MAAA,SAAS,EAAC,QADX;AAEC,MAAA,OAAO,EAAEJ,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAOC;AAAM,MAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,YAPD,eASC;AAAQ,MAAA,EAAE,EAAC,eAAX;AAA2B,MAAA,GAAG,EAAC,EAA/B;AAAkC,MAAA,KAAK,EAAC,eAAxC;AAAwD,MAAA,KAAK,EAAC,KAA9D;AAAoE,MAAA,MAAM,EAAC,IAA3E;AAAgF,MAAA,WAAW,EAAC,GAA5F;AAAgG,MAAA,iBAAiB,EAAC,MAAlH;AAAyH,MAAA,KAAK,EAAC;AAA/H;AAAA;AAAA;AAAA;AAAA,YATD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,CA/BqB,CA8CrB;;AACA,WAASiB,eAAT,GAA2B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAAsBE,SAAtB;AACA;AACD;;KAlDQV,W;AAoDV,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\n\tfunction MainContent(){\n\t\t\n\t\t// Get user's lat / long when they click the button\n\t\tfunction findGeo() {\n\t\t\t\n\t\t\tconst status = document.querySelector('#status');\n\t\t\tlet spotifySrc;\n\n\t\t\tfunction success(position) {\n    \t\tconst latitude  = position.coords.latitude;\n    \t\tconst longitude = position.coords.longitude;\n    \t\tstatus.textContent = latitude + ', ' + longitude;\n    \t\tdocument.getElementById('spotify-embed').setAttribute('src', spotifySrc);\n    \t}\n\n    \tfunction error() {\n   \t\t\tstatus.textContent = 'Unable to retrieve your location';\n  \t\t}\n\n  \t\tif(!navigator.geolocation) {\n   \t\t\tstatus.textContent = 'Geolocation is not supported by your browser';\n  \t\t} else {\n    \t\tstatus.textContent = 'Locating…';\n    \t\tnavigator.geolocation.getCurrentPosition(success, error);    \t\t   \t\t\n    \t\t\n    \t\t//Show appropriate spotify embed. Make this dynamic eventually.\n    \t\t//Does this belong here or somewhere else?\n    \t\tspotifySrc = 'https://open.spotify.com/embed/album/1DFixLWuPkv3KT3TnV35m3'; \n  \t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"m-auto\"\t\t\t\t\t\n\t\t\t\t\tonClick={findGeo}\n\n\t\t\t\t>Get my location</button>\n\n\t\t\t\t<span id=\"status\"></span>\n\n\t\t\t\t<iframe id=\"spotify-embed\" src=\"\" title=\"spotify-embed\" width=\"300\" height=\"80\" frameBorder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\n\t\t// Convert lat / long into nearest metro area\n\t\tfunction getNearestMetro() {\n\t\t\tconsole.log(latitude, longitude);\n\t\t}\n\t}\n\nexport default MainContent;"]},"metadata":{},"sourceType":"module"}