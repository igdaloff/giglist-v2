{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityOption = [{\n  label: \"New York\",\n  value: \"new-york\",\n  stateabbr: \"NY\"\n}, {\n  label: \"Los Angeles\",\n  value: \"los-angeles\",\n  stateabbr: \"CA\"\n}, {\n  label: \"Columbus\",\n  value: \"columbus\",\n  stateabbr: \"OH\"\n}];\nexport class CitySelect extends React.Component {\n  //Initialize local state (default city value) and assign it to this.state\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"New York\",\n      stateabbr: \"NY\"\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleSelectChange(e) {\n    this.setState({\n      city: e.target.value,\n      stateabbr: e.target.dataset.stateabbr\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center content-center h-full p-0 m-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.city,\n        onChange: this.handleSelectChange,\n        className: \"m-auto\",\n        children: cityOption.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.label,\n          \"data-stateabbr\": option.stateabbr,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nReactDOM.render( /*#__PURE__*/_jsxDEV(CitySelect, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 57,\n  columnNumber: 2\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js"],"names":["React","ReactDOM","cityOption","label","value","stateabbr","CitySelect","Component","constructor","props","state","city","handleSelectChange","bind","e","setState","target","dataset","render","map","option","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAG,CACjB;AACEC,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,SAAS,EAAE;AAHb,CADiB,EAMjB;AACEF,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,KAAK,EAAE,aAFT;AAGEC,EAAAA,SAAS,EAAE;AAHb,CANiB,EAWjB;AACEF,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,KAAK,EAAE,UAFT;AAGEC,EAAAA,SAAS,EAAE;AAHb,CAXiB,CAAnB;AAkBA,OAAO,MAAMC,UAAN,SAAyBN,KAAK,CAACO,SAA/B,CAAyC;AAE9C;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZN,MAAAA,SAAS,EAAE;AAFC,KAAb;AAKA,SAAKO,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAACE,CAAD,EAAI;AACpB,SAAKC,QAAL,CAAc;AACbJ,MAAAA,IAAI,EAAEG,CAAC,CAACE,MAAF,CAASZ,KADF;AAEbC,MAAAA,SAAS,EAAES,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBZ;AAFf,KAAd;AAID;;AAEDa,EAAAA,MAAM,GAAG;AACT,wBACC;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA,8BACC;AAAQ,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,IAA1B;AAAgC,QAAA,QAAQ,EAAE,KAAKC,kBAA/C;AAAmE,QAAA,SAAS,EAAC,QAA7E;AAAA,kBACEV,UAAU,CAACiB,GAAX,CAAgBC,MAAD,iBACf;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAACjB,KAAzC;AAAgD,4BAAgBiB,MAAM,CAACf,SAAvE;AAAA,oBAAmFe,MAAM,CAACjB;AAA1F,WAAaiB,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,eAMC;AAAA,kBAAI,KAAKM,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cAND;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAUA;;AA/B8C;AAkChDV,QAAQ,CAACiB,MAAT,eACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QADD,EAECG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFD","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nconst cityOption = [\n  {\n    label: \"New York\",\n    value: \"new-york\",\n    stateabbr: \"NY\"\n  },\n  {\n    label: \"Los Angeles\",\n    value: \"los-angeles\",\n    stateabbr: \"CA\"\n  },\n  {\n    label: \"Columbus\",\n    value: \"columbus\",\n    stateabbr: \"OH\"\n  }\n];\n\nexport class CitySelect extends React.Component {\n  \n  //Initialize local state (default city value) and assign it to this.state\n  constructor(props) {\n    super(props); \n    this.state = {\n    \tcity: \"New York\",\n    \tstateabbr: \"NY\"\n    };\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleSelectChange(e) {\n    this.setState({ \n    \tcity: e.target.value, \n    \tstateabbr: e.target.dataset.stateabbr \n    });\n  }\n\n  render() {\n\t\treturn (\n\t\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n\t\t\t\t<select value={this.state.city} onChange={this.handleSelectChange} className=\"m-auto\">\n\t\t\t\t\t{cityOption.map((option) => (\n\t\t\t\t\t\t<option key={option.value} value={option.label} data-stateabbr={option.stateabbr}>{option.label}</option>\n\t\t\t\t  ))}\n\t\t\t\t</select>\t\n\t\t\t\t<p>{this.state.city}</p>\t\t\t\t\n\t\t\t</div>\t\t\t\n\t\t);\n\t}\n}\n\nReactDOM.render(\n\t<CitySelect />,\n\tdocument.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}