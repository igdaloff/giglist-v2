{"ast":null,"code":"var _jsxFileName = \"/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityOption = {\n  \"new-york\": {\n    label: \"New York\",\n    value: \"new-york\"\n  },\n  \"los-angeles\": {\n    label: \"Los Angeles\",\n    value: \"los-angeles\"\n  },\n  \"columbus\": {\n    label: \"Columbus\",\n    value: \"columbus\"\n  }\n};\nexport class CitySelect2 extends React.Component {\n  //Initialize local state (default city value) and assign it to this.state\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"New York\",\n      stateabbr: \"NY\"\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleSelectChange(e) {\n    this.setState({\n      city: e.target.value,\n      stateabbr: e.target.dataset.stateabbr\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center content-center h-full p-0 m-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: this.state.city,\n        onChange: this.handleSelectChange,\n        className: \"m-auto\",\n        children: cityOption.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.label,\n          \"data-stateabbr\": option.stateabbr,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"City: \", this.state.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"State: \", this.state.stateabbr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport function CitySelect() {\n  _s();\n\n  const [city, setCity] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center content-center h-full p-0 m-0\",\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"m-auto\",\n      children: Object.values(cityOption).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.label,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CitySelect, \"suaywV2685V3ps3QnvEHDTjzC9U=\");\n\n_c = CitySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CitySelect\");","map":{"version":3,"sources":["/Users/nathan/Sites/giglist-v2/src/Components/CitySelect.js"],"names":["React","useState","ReactDOM","cityOption","label","value","CitySelect2","Component","constructor","props","state","city","stateabbr","handleSelectChange","bind","e","setState","target","dataset","render","map","option","CitySelect","setCity","Object","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,UAAU,GAAG;AACjB,cAAY;AACVC,IAAAA,KAAK,EAAE,UADG;AAEVC,IAAAA,KAAK,EAAE;AAFG,GADK;AAKjB,iBAAe;AACbD,IAAAA,KAAK,EAAE,aADM;AAEbC,IAAAA,KAAK,EAAE;AAFM,GALE;AASjB,cAAY;AACVD,IAAAA,KAAK,EAAE,UADG;AAEVC,IAAAA,KAAK,EAAE;AAFG;AATK,CAAnB;AAeA,OAAO,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAE/C;AACAC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,UADM;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAb;AAKA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDD,EAAAA,kBAAkB,CAACE,CAAD,EAAI;AACpB,SAAKC,QAAL,CAAc;AACbL,MAAAA,IAAI,EAAEI,CAAC,CAACE,MAAF,CAASZ,KADF;AAEbO,MAAAA,SAAS,EAAEG,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBN;AAFf,KAAd;AAID;;AAEDO,EAAAA,MAAM,GAAG;AACT,wBACC;AAAK,MAAA,SAAS,EAAC,mDAAf;AAAA,8BAEC;AAAQ,QAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,IAA1B;AAAgC,QAAA,QAAQ,EAAE,KAAKE,kBAA/C;AAAmE,QAAA,SAAS,EAAC,QAA7E;AAAA,kBACEV,UAAU,CAACiB,GAAX,CAAgBC,MAAD,iBACf;AAA2B,UAAA,KAAK,EAAEA,MAAM,CAACjB,KAAzC;AAAgD,4BAAgBiB,MAAM,CAACT,SAAvE;AAAA,oBAAmFS,MAAM,CAACjB;AAA1F,WAAaiB,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD,eAQC;AAAA,6BAAU,KAAKK,KAAL,CAAWC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,eASC;AAAA,8BAAW,KAAKD,KAAL,CAAWE,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cATD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAcA;;AAnC+C;AAsCjD,OAAO,SAASU,UAAT,GAAqB;AAAA;;AAE3B,QAAM,CAAEX,IAAF,EAAQY,OAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,mDAAf;AAAA,2BAEC;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,gBACEuB,MAAM,CAACC,MAAP,CAActB,UAAd,EAA0BiB,GAA1B,CAA+BC,MAAD,iBAC9B;AAA2B,QAAA,KAAK,EAAEA,MAAM,CAACjB,KAAzC;AAAA,kBAAiDiB,MAAM,CAACjB;AAAxD,SAAaiB,MAAM,CAAChB,KAApB;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAfeiB,U;;KAAAA,U","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst cityOption = {\n  \"new-york\": {\n    label: \"New York\",\n    value: \"new-york\",    \n  },\n  \"los-angeles\": {\n    label: \"Los Angeles\",\n    value: \"los-angeles\",    \n  },\n  \"columbus\": {\n    label: \"Columbus\",\n    value: \"columbus\",   \n  }\n};\n\nexport class CitySelect2 extends React.Component {\n  \n  //Initialize local state (default city value) and assign it to this.state\n  constructor(props) {\n    super(props); \n    this.state = {\n    \tcity: \"New York\",\n    \tstateabbr: \"NY\"\n    };\n\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n\n  handleSelectChange(e) {\n    this.setState({ \n    \tcity: e.target.value, \n    \tstateabbr: e.target.dataset.stateabbr \n    });\n  }\n\n  render() {\n\t\treturn (\n\t\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n\n\t\t\t\t<select value={this.state.city} onChange={this.handleSelectChange} className=\"m-auto\">\n\t\t\t\t\t{cityOption.map((option) => (\n\t\t\t\t\t\t<option key={option.value} value={option.label} data-stateabbr={option.stateabbr}>{option.label}</option>\n\t\t\t\t  ))}\n\t\t\t\t</select>\t\n\n\t\t\t\t<p>City: {this.state.city}</p>\t\t\t\t\n\t\t\t\t<p>State: {this.state.stateabbr}</p>\t\t\t\t\n\n\t\t\t</div>\t\t\t\n\t\t);\n\t}\n}\n\nexport function CitySelect(){  \n\t\n\tconst [ city, setCity ] = useState('');\n\n\treturn (\n\t\t<div className=\"flex justify-center content-center h-full p-0 m-0\">\n\n\t\t\t<select className=\"m-auto\">\n\t\t\t\t{Object.values(cityOption).map((option) => (\n\t\t\t\t\t<option key={option.value} value={option.label}>{option.label}</option>\n\t\t\t  ))}\n\t\t\t</select>\t\t\t\t\n\n\t\t</div>\t\t\t\n\t);\t\n}"]},"metadata":{},"sourceType":"module"}